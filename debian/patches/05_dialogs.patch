diff --git a/ui/gtk/browse.c b/ui/gtk/browse.c
--- a/ui/gtk/browse.c
+++ b/ui/gtk/browse.c
@@ -122,7 +122,7 @@ create_dialog( void )
   gtkstock_create_close( dialog, NULL, GTK_SIGNAL_FUNC( browse_done ), FALSE );
 
   /* Make the window big enough to show at least some data */
-  gtk_window_set_default_size( GTK_WINDOW( dialog ), -1, 200 );
+  gtk_window_set_default_size( GTK_WINDOW( dialog ), 400, 300 );
 
   dialog_created = 1;
 
diff --git a/ui/gtk/debugger.c b/ui/gtk/debugger.c
--- a/ui/gtk/debugger.c
+++ b/ui/gtk/debugger.c
@@ -266,6 +266,7 @@ create_dialog( void )
 {
   int error;
   GtkWidget *hbox, *vbox, *hbox2;
+  GtkWidget *sw, *mainvbox;
   GtkAccelGroup *accel_group;
   debugger_pane i;
 
@@ -275,19 +276,24 @@ create_dialog( void )
 
   dialog = gtkstock_dialog_new( "Fuse - Debugger",
 				GTK_SIGNAL_FUNC( delete_dialog ) );
+  gtk_window_set_default_size (GTK_WINDOW (dialog), 800, 400);
+
+  sw = gtk_scrolled_window_new (NULL, NULL);
+  mainvbox = gtk_vbox_new (FALSE, 0);
+  gtk_scrolled_window_add_with_viewport ( GTK_SCROLLED_WINDOW ( sw ), mainvbox );
+  gtk_container_add( GTK_CONTAINER( GTK_DIALOG( dialog )->vbox ), sw );
 
   /* Keyboard shortcuts */
   accel_group = gtk_accel_group_new();
   gtk_window_add_accel_group( GTK_WINDOW( dialog ), accel_group );
 
   /* The menu bar */
-  error = create_menu_bar( GTK_BOX( GTK_DIALOG( dialog )->vbox ),
-			   accel_group );
+  error = create_menu_bar( GTK_BOX( mainvbox ), accel_group );
   if( error ) return error;
 
   /* Some boxes to contain the things we want to display */
   hbox = gtk_hbox_new( FALSE, 0 );
-  gtk_box_pack_start( GTK_BOX( GTK_DIALOG( dialog )->vbox ), hbox,
+  gtk_box_pack_start( GTK_BOX( mainvbox ), hbox,
 		      TRUE, TRUE, 5 );
 
   vbox = gtk_vbox_new( FALSE, 5 );
@@ -312,7 +318,7 @@ create_dialog( void )
 
   error = create_events( GTK_BOX( hbox ) ); if( error ) return error;
 
-  error = create_command_entry( GTK_BOX( GTK_DIALOG( dialog )->vbox ),
+  error = create_command_entry( GTK_BOX( mainvbox ),
 				accel_group );
   if( error ) return error;
 
diff --git a/ui/gtk/gtkui.c b/ui/gtk/gtkui.c
--- a/ui/gtk/gtkui.c
+++ b/ui/gtk/gtkui.c
@@ -510,6 +510,7 @@ void
 menu_machine_select( GtkWidget *widget GCC_UNUSED, gpointer data GCC_UNUSED )
 {
   gtkui_select_info dialog;
+  GtkWidget *sw, *vbox;
 
   int i;
   
@@ -525,6 +526,7 @@ menu_machine_select( GtkWidget *widget GCC_UNUSED, gpointer data GCC_UNUSED )
 
   /* Create the necessary widgets */
   dialog.dialog = gtkstock_dialog_new( "Fuse - Select Machine", NULL );
+  gtk_window_set_default_size (GTK_WINDOW (dialog.dialog), -1, 300);
 
   dialog.buttons[0] =
     gtk_radio_button_new_with_label(
@@ -539,13 +541,21 @@ menu_machine_select( GtkWidget *widget GCC_UNUSED, gpointer data GCC_UNUSED )
       );
   }
 
+  sw = gtk_scrolled_window_new (NULL, NULL);
+  gtk_scrolled_window_set_policy (GTK_SCROLLED_WINDOW (sw),
+                                  GTK_POLICY_NEVER, GTK_POLICY_AUTOMATIC);
+  vbox = gtk_vbox_new (FALSE, 0);
+
   for( i=0; i<machine_count; i++ ) {
     gtk_toggle_button_set_active( GTK_TOGGLE_BUTTON( dialog.buttons[i] ),
 				  machine_current == machine_types[i] );
-    gtk_container_add( GTK_CONTAINER( GTK_DIALOG( dialog.dialog )->vbox ),
-		       dialog.buttons[i] );
+    gtk_box_pack_start ( GTK_BOX (vbox) , dialog.buttons[i], TRUE, TRUE, 0 );
   }
 
+  gtk_scrolled_window_add_with_viewport ( GTK_SCROLLED_WINDOW ( sw ), vbox );
+  gtk_container_add( GTK_CONTAINER( GTK_DIALOG( dialog.dialog )->vbox ),
+                     sw );
+
   /* Create and add the actions buttons to the dialog box */
   gtkstock_create_ok_cancel( dialog.dialog, NULL,
 			     GTK_SIGNAL_FUNC( menu_machine_select_done ),
diff --git a/ui/gtk/options.pl b/ui/gtk/options.pl
--- a/ui/gtk/options.pl
+++ b/ui/gtk/options.pl
@@ -70,6 +70,7 @@ menu_options_$_->{name}( GtkWidget *widget GCC_UNUSED,
 {
   menu_options_$_->{name}_t dialog;
   GtkWidget *frame, *hbox, *text;
+  GtkWidget *sw, *vbox;
   gchar buffer[80];
 
   frame = hbox = text = NULL;
@@ -81,6 +82,16 @@ menu_options_$_->{name}( GtkWidget *widget GCC_UNUSED,
   /* Create the necessary widgets */
   dialog.dialog = gtkstock_dialog_new( "Fuse - $_->{title}", NULL );
 
+  gtk_window_set_default_size (GTK_WINDOW (dialog.dialog), -1, 300);
+ 
+  sw = gtk_scrolled_window_new (NULL, NULL);
+  gtk_scrolled_window_set_policy (GTK_SCROLLED_WINDOW (sw),
+                                  GTK_POLICY_NEVER, GTK_POLICY_AUTOMATIC);
+  vbox = gtk_vbox_new (FALSE, 0);
+  gtk_scrolled_window_add_with_viewport (GTK_SCROLLED_WINDOW (sw), vbox);
+  gtk_box_pack_start_defaults (GTK_BOX (GTK_DIALOG (dialog.dialog)->vbox),
+                              sw);
+
   /* Create the various widgets */
 CODE
 
@@ -97,8 +108,7 @@ CODE
     gtk_check_button_new_with_label( "$text" );
   gtk_toggle_button_set_active( GTK_TOGGLE_BUTTON( dialog.$widget->{value} ),
 				settings_current.$widget->{value} );
-  gtk_container_add( GTK_CONTAINER( GTK_DIALOG( dialog.dialog )->vbox ),
-		     dialog.$widget->{value} );
+  gtk_container_add( GTK_CONTAINER( vbox ), dialog.$widget->{value} );
 
 CODE
             } elsif( $type eq "Entry" ) {
@@ -107,8 +117,7 @@ CODE
 
 		print << "CODE";
   frame = gtk_frame_new( "$text" );
-  gtk_box_pack_start_defaults( GTK_BOX( GTK_DIALOG( dialog.dialog )->vbox ),
-			       frame );
+  gtk_box_pack_start_defaults( GTK_BOX( vbox ), frame );
 				    
   hbox = gtk_hbox_new( FALSE, 0 );
   gtk_container_set_border_width( GTK_CONTAINER( hbox ), 4 );
